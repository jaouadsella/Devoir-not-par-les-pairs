# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UuSzEz-rbRtXzfppKBB-9Tm-7saj2JMN
"""

import yfinance as yf
# Télécharger les données sur les actions de Tesla
tesla_data = yf.download('TSLA', start='2023-01-01', end='2024-01-01')
# Réinitialiser l'index
tesla_data.reset_index(inplace=True)
# Enregistrer les données dans un fichier CSV
tesla_data.to_csv('tesla_stock_data.csv', index=False)
# Afficher les cinq premières lignes des données
print(tesla_data.head())

import requests
from bs4 import BeautifulSoup
import pandas as pd

# URL de la page Web contenant les données sur les revenus de Tesla
url = 'https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue'

# Faire une requête GET pour récupérer le contenu de la page
response = requests.get(url)

# Analyser le contenu HTML de la page avec BeautifulSoup
soup = BeautifulSoup(response.text, 'html.parser')

# Trouver la table contenant les données sur les revenus de Tesla
table = soup.find('table', {'class': 'historical_data_table table'})

# Extraire les données de la table et les stocker dans un DataFrame
tesla_revenue = pd.read_html(str(table))[0]

# Afficher les cinq dernières lignes du cadre de données tesla_revenue
print(tesla_revenue.tail())

import yfinance as yf

# Télécharger les données boursières de GameStop
gme_data = yf.download('GME', start='2023-01-01', end='2024-01-01')

# Réinitialiser l'index
gme_data.reset_index(inplace=True)

# Enregistrer les données dans un fichier CSV
gme_data.to_csv('gme_stock_data.csv', index=False)

# Afficher les cinq premières lignes des données
print(gme_data.head())

import requests
from bs4 import BeautifulSoup
import pandas as pd

# URL de la page Web contenant les données sur les revenus de GameStop
url = 'https://www.macrotrends.net/stocks/charts/GME/gamestop/revenue'

# Faire une requête GET pour récupérer le contenu de la page
response = requests.get(url)

# Analyser le contenu HTML de la page avec BeautifulSoup
soup = BeautifulSoup(response.text, 'html.parser')

# Trouver la table contenant les données sur les revenus de GameStop
table = soup.find('table', {'class': 'historical_data_table table'})

# Extraire les données de la table et les stocker dans un DataFrame
gme_revenue = pd.read_html(str(table))

# Afficher les cinq dernières lignes du cadre de données gme_revenue
print(gme_revenue.tail())

import matplotlib.pyplot as plt

def make_graph(data, title):
    plt.figure(figsize=(10, 6))
    plt.plot(data['Date'], data['Close'], label='Fermeture')
    plt.title(title)
    plt.xlabel('Date')
    plt.ylabel('Prix de l\'action')
    plt.legend()
    plt.grid(True)
    plt.show()

# Utiliser la fonction make_graph pour représenter graphiquement les données de l'action Tesla
make_graph(tesla_data, 'Prix de l\'action Tesla')

# Utiliser la fonction make_graph pour représenter graphiquement les données sur les actions de GameStop
make_graph(gme_data, 'Prix de l\'action GameStop')

